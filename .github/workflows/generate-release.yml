name: Generate a Release

on:
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
      - '!v[0-9].[0-9]+.[0-9]+rc[0-9]+'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  get-python-version:
    name: Get Latest Python Version
    runs-on: ubuntu-latest
    outputs:
      highest-version: ${{ steps.get-language-versions.outputs.latest-versions }}

    steps:
      - name: Get Required Version
        uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f  # v0.1.3
        id: get-language-versions
        with:
          language: "python"
          highest-only: true

  build-and-publish:
    name: Build & publish to PyPI
    runs-on: ubuntu-latest
    needs:
      - get-python-version

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Setup Python ${{ needs.get-python-version.outputs.highest-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: ${{ needs.get-python-version.outputs.highest-version }}

      - name: Update Pip
        run: python -m pip install --upgrade pip

      - name: Install Required Tooling
        run: pip install setuptools wheel twine

      - name: Build Binary Wheel & Source Tarball
        run: python setup.py sdist bdist_wheel

      - name: Verify Binary Wheel & Source Tarball
        run: twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

  set-release-version:
    name: Set Release Version
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.set-release-version.outputs.release-version }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0

      - name: Set the Release Version
        id: set-release-version
        run: |
          echo "release-version=${GITHUB_REF#refs/*/}" >> "${GITHUB_OUTPUT}"

  create-release:
    name: Create a Release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - set-release-version

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0

      - name: Generate Changelog
        uses: Bullrich/generate-release-changelog@6b60f004b4bf12ff271603dc32dbd261965ad2f2  # v2.0.2
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create a Release
        id: create_release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: ${{ needs.set-release-version.outputs.release-version }}
          body: ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
